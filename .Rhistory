install.packages("swirl")
> library("swirl")
library("swirl")
library(swirl)
swirl()
my_vector <- as.vector(1:20)
info()
?as
my_vector
my_vector <- 1:20
my_vector
dim(my_vector)
legnth(my_vector)
length(my_vector)
dim(my_vector)<- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vecotr
my_vector
class(my_vector)
my_matrix <- my_vector
install.packages("rpostgresql")
install.packages("rmysql")
install.packages("rmysql")
install.packages("rmysql", type="source")
install.packages("RMySQL", type="source")
install.packages("RMySQL")
library(RMySQL)
install.packages("RPostgreSQL")
Sys.setenv(PKG_CPPFLAGS = "-I/usr/local/include/mysql")
Sys.setenv(PKG_CPPFLAGS = "-I/usr/local/include/mysql")
install.packages("RMySQL", type = "source")
library(RMySQL)
myDBconnect <- dbConnect(MySQL(), user ="genome",host="genome-mysql.cse.usc.edu")
myResult <- dbGetQuery(myDBconnect,"show databases;")
dbDisconnect(myDBconnect);
myDBconnect <- dbConnect(MySQL(), user ="genome",host="genome-mysql.cse.ucsc.edu")
myResult <- dbGetQuery(myDBconnect,"show databases;")
myResult
myDB_hg19 <- dbConnect(MySQL(), user ="genome", db="hg19", host="genome-mysql.cse.ucsc.edu")
**dbListFields**(hg19,"affyU133Plus2")
dbListFields(hg19,"affyU133Plus2")
dbListFields(myDB_hg19,"affyU133Plus2")
dbGetQuery(myDB_hg19,"select count(*) from affyU133Plus2")
query <- **dbSendQuery**(myDB_hg19,"select * from affyU133Plus2 where misMatches between 1 and 3")
query <- dbSendQuery(myDB_hg19,"select * from affyU133Plus2 where misMatches between 1 and 3")
query
head(query)
fetch(query)
fetch(query,n=10)
fetch(query,n=10) ##TOP 10
dbDisconnect(myDBconnect)
dbDisconnect(myDB_hg19)
dbDisconnect(myDB_hg19)
View(myResult)
close(query)
dbClearResult(dbListResults(myDB_hg19)[[1]])
dbDisconnect(myDB_hg19)
source("http://bioconductor.org/biocLite.R")
biocLite("rhdf5")
created = h5createFile("exemple.h5")
library(rhdf5)
created = h5createFile("exemple.h5")
created =h5createGroup("example.h5","foo")
created =h5createGroup("example.h5","baa")
created =h5createGroup("example.h5","foo/foobaa")
h5ls("example.h5")
created = h5createFile("example.h5")
created =h5createGroup("example.h5","foo")
created =h5createGroup("example.h5","baa")
created =h5createGroup("example.h5","foo/foobaa")
h5ls("example.h5")
con = url("http://scholar.google.com/citations?user=HI-I6C0AAAAJ&hl=en")
htmlcode = readLines(con)
close(con)
htmlCode
con = url("http://scholar.google.com/citations?user=HI-I6C0AAAAJ&hl=en")
htmlcode = readLines(con)
url<-"http://scholar.google.com/citations?user=HI-I6C0AAAAJ&hl=en"
html <- htmlTreeParse(url,useInternalNodes=T)
library(XML)
url<-"http://scholar.google.com/citations?user=HI-I6C0AAAAJ&hl=en"
html <- htmlTreeParse(url,useInternalNodes=T)
xpathSApply(html,"//title",xmlValue)
library(httr);
url<-"http://scholar.google.com/citations?user=HI-I6C0AAAAJ&hl=en"
html2 = GET(url)
content2 = content(html2,as="text")
parsedHtml = htmlParse(content2,asText=TRUE)
xpathSApply(parsedHtml,"//title",xmlValue)
pg2 = GET("http://httpbin.org/basic-auth/user/passwd", authenticate("user","passwd"))
names(pg2)
google = handle("http://google.com")
pg1 = GET(handle=google,path="/")
pg2 = GET(handle=google,path="search")
pg1
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("github", "b56df8b565accfe1144ea1e6f0f263282ebccc70")
myapp <- oauth_app("a059838cfdb86bf817de", "b56df8b565accfe1144ea1e6f0f263282ebccc70")
myapp <- oauth_app("github", "a059838cfdb86bf817de", secret="b56df8b565accfe1144ea1e6f0f263282ebccc70")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
github_token2 <- oauth2.0_token(oauth_endpoints("github"), myapp)
?authorizer
library(httpuv)
install.packages("httpuv")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
req
stop_for_status(req)
content(req)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
content(req)
req
names(req)
req$url
req$headers
req$content
m <- content(req)
names(m)
?m
m$name
m$owner
m
m[1]
m$name
for (element in m) {
print(m$name)
}
m <- content(req, as "test")
m <- content(req, as = "test")
m <- content(req, as = "parsed")
m
for(i in 1:30){ m[1]$name
}
for(i in 1:30){ print(m[1]$name)}
m[1]
m[1]$name
m[[1]]$name
for(i in 1:30){ print(m[[1]$name)}
for(i in 1:30){ print(m[[1]]$name)}
for(i in 1:30){ print(m[[i]]$name)}
for(i in 1:30){ print(i,m[[i]]$name)}
for(i in 1:30){ print(i);print(m[[i]]$name)}
for(i in 1:30){ print(i);print(m[[i]]$name);print(m[[i]]$created_at)}
for(i in 1:30){ print(c(m[[i]]$name,print(m[[i]]$created_at))}
for(i in 1:30){ print(c(m[[i]]$name;print(m[[i]]$created_at))}
c("a";"b")
?c
c("a","b")
for(i in 1:30){ print( c( m[[i]]$name , m[[i]]$created_at ) )}
library(sqldf)
install.packages("sqldf")
library(sqldf)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv",destfile="GCD-W2-Q2.csv",method="curl")
setwd("~/Documents/GitHub/GCD-Week2")
mydata <- read.table("GCD-W2-Q2.csv")
head(mydata)
mydata <- read.table("GCD-W2-Q2.csv", sep=",", header=TRUE)
head(mydata)
DF = as.data.frame(mydata)
acs = as.data.frame(mydata)
sqldf("select * from acs where AGEP < 50 and pwgtp1")
unique(acs$AGEP)
sqldf("select * from acs where AGEP < 50 and pwgtp1")
sqldf("select pwgtp1 from acs where AGEP < 50")
sqldf("select distinct AGEP from acs")
url <- "http://biostat.jhsph.edu/~jleek/contact.html "
url <- "http://biostat.jhsph.edu/~jleek/contact.html"
con = url(url)
htmlcode = readLines(con)
close(con)
htmlcode
nchar(htmlcode)
c(nchar(htmlcode),htmlcode)
htmlcode[10]
head(htmlcode)
htmlcode[1]
for(i in (10,20,30,100)) {print(i)}
for(i in {10,20,30,100}) {print(i)}
v <- c(10,20,30,100)
v
for (i in v) {print(i)}
for (i in v) {print( c(i,htmlcode[i],nchar(htmlcode[i])) )}
for (i in v) {print( c(i,nchar(htmlcode[i]),htmlcode[i]) )}
download.files("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",destfile="GCD-W2-Q5.for",method="curl")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",destfile="GCD-W2-Q5.for",method="curl")
x <- read.fwf(
file="GCD-W2-Q5.for",
skip=4,
widths=c(12, 7,4, 9,4, 9,4, 9,4))
x
head(x)
?read.fwf
x <- read.fwf(
file="GCD-W2-Q5.for",
skip=4,
widths=c(12, 7,4, 9,4, 9,4, 9,4)
row.names=c("Week","Nino1+2.SST","Nino1+2.SSTA","Nino3.SST","Nino3.SSTA","Nino34.SST","Nino34.SSTA","Nino4.SST","Nino4.SSTA"))
x <- read.fwf(
file="GCD-W2-Q5.for",
skip=4,
widths=c(12, 7,4, 9,4, 9,4, 9,4),
row.names=c("Week","Nino1+2.SST","Nino1+2.SSTA","Nino3.SST","Nino3.SSTA","Nino34.SST","Nino34.SSTA","Nino4.SST","Nino4.SSTA")
)
x <- read.fwf(
file="GCD-W2-Q5.for",
skip=4,
widths=c(12, 7,4, 9,4, 9,4, 9,4),
col.names=c("Week","Nino1+2.SST","Nino1+2.SSTA","Nino3.SST","Nino3.SSTA","Nino34.SST","Nino34.SSTA","Nino4.SST","Nino4.SSTA")
)
head(x)
x$Nino3.SST
sum(x$Nino3.SST)
